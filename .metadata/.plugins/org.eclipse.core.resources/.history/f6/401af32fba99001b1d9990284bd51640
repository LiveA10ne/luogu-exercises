package 贪心;

import java.io.*;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Comparator;

public class 删数问题 {
	
	static class Num implements Comparable<Num>{
		
		int index;
		int value;
		
		public Num(int index, int value) {
			// TODO Auto-generated constructor stub
			this.index = index;
			this.value = value;
		}
		
		@Override
		public int compareTo(Num o) {
			// TODO Auto-generated method stub
			return this.value > o.value ? 1 : -1;
		}
		
	}

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StreamTokenizer st = new StreamTokenizer(br);
		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		
		String num= br.readLine();
		char[] numArr = num.trim().toCharArray();
		Num[] arr = new Num[numArr.length];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = new Num(i, Integer.parseInt(String.valueOf(numArr[i])));
		}		
		st.nextToken();
		int k = (int)st.nval;
		Arrays.sort(arr);
		
		for (Num num2 : arr) {
			pw.print(num2.value+" ");
		}
		pw.println();
		
		Arrays.copyOf(arr, arr.length - k);
		
		for (Num num2 : arr) {
			pw.print(num2.value+" ");
		}
		pw.println();
		
		Arrays.sort(arr, new Comparator<Num>() {

			@Override
			public int compare(Num o1, Num o2) {
				// TODO Auto-generated method stub
				return o1.index > o2.index ? 1 : -1;
			}
			
		});
		
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < arr.length - k; i++) {
			sb.append(arr[i].value);
		}
		BigInteger rel = new BigInteger(sb.toString());
		
		pw.print(rel);
		pw.close();
	}

}
